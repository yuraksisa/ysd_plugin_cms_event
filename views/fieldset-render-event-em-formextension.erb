<script type="text/javascript">

require(['jquery', 'YSDEntityManagementComplementHooks', 'YSDMemoryDataSource', 'YSDSelectSelector', 'YSDDateFormatter', 'jquery.ui', 'jquery.ui.timepicker' ],
        function($, EntityManagementComplementHooks, MemoryDataSource, SelectSelector, DateFormatter ) {

          EventPlugin = function() {
          	
            this.onEdit = function(entity) { /* On Edit */
            
              this.configureForm(entity);
            
            };
            
            this.onNew = function() { /* On new */
              
              this.configureForm(null);
            
            };
            
            this.adaptFormData = function(data) {
            	
              data.event_date_start = $('#event_date_start').datetimepicker("getDate");
              data.event_date_end   = $('#event_date_end').datetimepicker("getDate");
              data.event_time_zone  = DateFormatter.extractTimeZone($('#event_date_start').datetimepicker("getDate"));
            	
              return data;	
            	
            }
            
            /* -------------------------- */
            
            this.configureForm = function(entity) { /* Configure the events */
            
              var self = this;
              
              var minDateStart = new Date();
              minDateStart.clearTime();
              
              if (entity && entity.event_date_start) {
                minDateStart = new Date(entity.event_date_start.getFullYear(), entity.event_date_start.getMonth(), entity.event_date_start.getDate(), 0, 0, 0);
              }
            
              $('#event_date_start').datetimepicker(
                 {controlType: 'select', showTimezone: true, useLocalTimezone: true, numberOfMonths:2, 
                  minDate: minDateStart, dateFormat: 'dd/mm/yy', timeFormat: 'HH:mm'},
                  '<%= session[:locale] %>');
              
              if (entity != null) {
                entity.event_date_start.setHours(entity.event_date_start.getHours() + parseInt(entity.event_time_zone));
                $('#event_date_start').datetimepicker('setDate', entity.event_date_start); 
              }
              else {
                $('#event_date_start').datetimepicker('setDate', '+0');
              }
              
              var minDateEnd = new Date();
              minDateEnd.clearTime();
              if (entity && entity.event_date_end) {
                minDateEnd = new Date(entity.event_date_end.getFullYear(), entity.event_date_end.getMonth(), entity.event_date_end.getDate(), 0, 0, 0);
              }

              $('#event_date_end').datetimepicker({controlType: 'select', showTimezone: true, useLocalTimezone: true, numberOfMonths:2, 
                 minDate: minDateEnd, dateFormat: 'dd/mm/yy'}, 
                 '<%= session[:locale] %>');
              
              if (entity != null) {
                entity.event_date_end.setHours(entity.event_date_end.getHours() + parseInt(entity.event_time_zone));
                $('#event_date_end').datetimepicker('setDate', entity.event_date_end);
              }
              else {
                $('#event_date_end').datetimepicker('setDate', '+0');
              }
              
              
            };
          };
                    
          var eventPlugin = new EventPlugin();
          EntityManagementComplementHooks.register(eventPlugin);	
	
    });
    
</script>